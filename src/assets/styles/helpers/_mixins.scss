// Hover mixin only for desktop devices
// to include use @include hover {your hover styles} can also include elements
@mixin hover {
  @media only screen and (min-width: 1025px) {
    .no-touch &:hover {
      @content;
    }
  }
}


// ----------  Animation mixin
// ------------------------------------------------------------------------------

// @include animation {transition: color 3s ease;}
@mixin animation {
  .loaded & {
    @content;
  }
}

//responsive font
@mixin responsive-font($minS, $maxS, $minW, $maxW) {
  font-size: #{$minS}px;
  @media all and (min-width: #{$minW}px) and (max-width: #{$maxW}px) {
    font-size: calc(#{$minS}px + (#{$maxS} - #{$minS}) * (100vw - #{$minW}px) / (#{$maxW} - #{$minW}));
  }
  @media all and (min-width: #{$maxW}px) {
    font-size: #{$maxS}px;
  }
}

//color-themes

$themes: (
        light: (
                bg: $white-light,
                bg2: $green-light,
                text: $charcoal,
                text-hover: $charcoal,
                text-accent: $charcoal,
                fill: $white-light,
                underline: "src/assets/images/svg/line-3.svg"
        ),
        dark: (
                bg: $blue-dark,
                bg2: $blue,
                text: $white,
                text-hover: $green-bright,
                text-accent: $green-bright,
                fill: $blue-dark,
                underline: "src/assets/images/svg/line-4.svg"
        ),
);

@mixin themed() {
  @each $theme, $map in $themes {
    .theme--#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge($theme-map, ($key: $value)) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function t($key) {
  @return map-get($theme-map, $key);
}




